外面的ftl是一些实例模板。

================================================================

The following has evaluated to null or missing
原因:要显示的字段没有getter方法，get方法必须放在该类的java文件里，
如果创建的是非pubkic的类会继续报错。使用map put值不会报此错。

================================================================

内置方法eval把json格式转成对象，下面是java代码，把对象转json传给ftl页面：
String json = g.toJson(ll);
maps.put("ll",json);
		
下面是ftl页面，把ll(json)转成ll(对象)：
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<#include 'hello2.ftl'/>
<#assign ll=ll?eval />
</head>
<body>
<h3>欢迎!${name}${user.p}${user.u}</h3>
<#if f>
	<h1>good</h1>
<#else>
	<h1>bad</h1>
</#if>

<#list ll as l>
<font color='red'>${l_index+1}:${l.id}：${ll?size}</font>
</#list>
</body>
</html>


================================================================

时间表示：

maps.put("today",new Date());  //java代码

${today?time}<br>				//ftl页面代码
${today?date}<br>
${today?datetime}<br>
${today?string('yyyy年MM月dd日')}<br>


================================================================

数字转 百分比/￥符号/字符串
maps.put("num",new Float(1.23456789));		//java代码

${num?string.percent}<br>			//ftl页面代码
${num?string.currency}<br>
${num?c}<br>

123%								//输出
￥1.23
1.2345678806304932

================================================================

null值处理(没有java代码，因为null0到null5都没有传值)：
0：${null0?default(2)}<br>				//ftl页面代码
1：${null1!3}<br>						//推荐使用这个
2：<#if null2??></#if><hr>
3：${null3?default("")}<br>
4：${null4!""}<br>
5：<#if null5??>不存在<#else>存在</#if>

0：2								//输出
1：3
2：
3：
4：
5：存在

================================================================

1.7.3  比较运算符
表达式中支持的比较运算符有如下几个:
1 =或者==:判断两个值是否相等.
2 !=:判断两个值是否不等.
3 >或者 gt:判断左边值是否大于右边值
4 >=或者 gte:判断左边值是否大于等于右边值
5 <或者 lt:判断左边值是否小于右边值
6 <=或者 lte:判断左边值是否小于等于右边值
注意: =和!=可以用于字符串,数值和日期来比较是否相等,但=和!=两边必须是相同类型的值,
否则会产生错误,而且 FreeMarker 是精确比较,"x","x ","X"是不等的.其它的运行符可以作用于
数字和日期,但不能作用于字符串,大部分的时候,使用gt等字母运算符代替>会有更好的效果,
因为 FreeMarker 会把>解释成 FTL 标签的结束字符,当然,也可以使用括号来避免这种情况,
如:<#if (x>y)>



================================================================

某写法：在js代码里给skuList用#list遍历赋值
    <script>
        var skuList=[
           
           <#list itemList as item>
            {
              id:'${item.id}',
              title:'${item.title}',
              price:${item.price},
              status:'${item.status}',
              isDefault:'${item.isDefault}',
              spec:${item.spec}            
            },
           </#list>
        
        ];
        
    </script>
	
自己写了如下类似代码，测试通过：
<script>
	var x=[
		<#list ll as l>
			${l_index+1},
		</#list>
	];
	alert(x);
</script>
================================================================


================================================================


================================================================


================================================================


================================================================


================================================================


================================================================


================================================================


================================================================


================================================================


================================================================


================================================================