#set log levels设置日志输出,必须导包log4j.log4j
#代码里加上Logger log = Logger.getLogger("随便写")，
#需要打印的信息就log.info/debug等等，可以代替syso使用
#注意不要正文后面写注释和多余的东西，例如多写一个符号
#log4j.appender.D.Threshold = DEBUG !会导致这一行配置无效，
#log4j.appender.D.File=d.log#名字会生成一个叫做"d.log#名字"的文件
log4j.rootLogger = debug , stdout , D , E

### 输出到控制台 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
#输出info级别以上的日志,如果不设置会输出DEBUG,因为上面有设置debug
log4j.appender.stdout.Threshold = info 
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
#可以修改格式，比如%m%n表示只输出打印信息+换行
log4j.appender.stdout.layout.ConversionPattern =%m%n

### 输出到日志文件 ###
log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File = logs/default_log.log
log4j.appender.D.Append = true
#输出DEBUG级别以上的日志
log4j.appender.D.Threshold = DEBUG 
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [ %t:%r ] - [ %p ] %m%n

### 保存异常信息到单独文件 ###
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
#异常日志文件名
log4j.appender.E.File = logs/error.log 
log4j.appender.E.Append = true
#只输出ERROR级别以上的日志
log4j.appender.E.Threshold = ERROR
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss} [ %t:%r ] - [ %p ] %m%n