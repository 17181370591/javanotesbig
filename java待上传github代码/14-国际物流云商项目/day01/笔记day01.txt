试着跑第一天的程序，遇到了很多bug，原因是：
1_使用了oracle数据库但没有打开虚拟机。
2_把主项目的pom复制粘贴进了web的pom。
3_后台的server_web层引用了前台的client_server。

tomcat运行到Initializing Spring root WebApplicationContext就卡住，
等20分钟都无法打开。baidu发现形成的原因很多，一开始想看tomcat的log，
但tomcat的logs里没有log文件，于是尝试了各自加载此文件的方法。
最后还是跑不起来，也看不到日志文件。此时发现两个工作空间的几乎所有tomcat的无法开启。
于是把tomcat配置改回去。改完后发现maven的一起跑不了。
重启myeclipse，删除tomcat的缓存的项目，发现maven的能跑了，
但是这次要运行的程序（包括教程复制的和自己写的，放在不同工作目录）依旧跑不起来，
原因也依旧是在Initializing Spring root WebApplicationContext就卡住。
于是集中解决自己的代码。于是发现上面3个问题，然后就成功了。前后花了3到5个小时。


=======================================================================


流程：
1_创建ilcbs_parent主程序，选pom。
2_选择ilcbs_parent主程序，创建其他子模块。子模块里jms和两个web选war，其他都默认。
3_dao和jms都依赖cache,exception,utils，dao再依赖domain，service依赖对应的dao，
web依赖对应的service。（即server依赖server，client依赖client）。
4_参考下面

https://blog.csdn.net/baifenbaizhenxin/article/details/82191366
国际物流云商项目笔记003.拷贝公共类&拷贝三个action&进入项目首页（详见day01的源码）

一、在父工程的pom.xml文件中配置项目需要的jar包。

二、导入web端页面。将所有web资源文件导入至server_web子工程的src—main—webapp文件夹中：

三、引入web页面资源所需的各类辅助资源，如index.jsp的loginAction、baseAction等java代码。
java代码放置在子工程的scr/main/java文件夹下。

四、拷贝配置文件（applicationContext.xml、struts.xml）至server_web子工程下的
src/main/resources文件夹下。



=======================================================================

