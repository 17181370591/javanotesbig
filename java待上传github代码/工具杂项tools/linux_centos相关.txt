安装java：

1_将jdk复制粘贴到centos的rjb，jdk的根目录就是JAVA_HOME。

2_到centos最上层。打开vim /etc/profile，在最下面加上下面3行：
export JAVA_HOME=	JAVA_HOME（这里是jdk的根目录）
export PATH=$JAVA_HOME/bin:$PATH
export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
然后source /etc/profile更新配置。

3_输入java version回车(下面全都不会写回车了)。如果报错权限不够，修改lib里所有文件的权限。
xftp右键可修改。如果报错/lib/ld-linux.so.2: bad ELF interpreter: 没有那个文件或目录，
说明在64位系统安装了32位java，输入sudo yum install glibc.i686回车即可。
输入java version 成功的话显示java版本。

=========================================================================

安装tomcat：
复制粘贴到centos的rjb，在lib路径sh startup.sh。
如果报错Cannot find bin/catalina.sh说明权限不够，把lib下文件权限全部放开。
成功的话显示tomcat started。
tail -f logs/catalina.out 查看tomcat日志(当前路径tomcat根目录)

=========================================================================

虚拟机ifconfig不显示127.0.0.0以外的ip：
一般重启就行了，有一次重启了也无效。重启网络服务service network start，
报错 Failed to start LSB: Bring up/down networking，解决方式：禁用NetworkManager，
1. systemctl stop NetworkManager
2. systemctl disable NetworkManager 
然后重启网络服务，能正常联网了！

=========================================================================


=========================================================================


=========================================================================

启动dubbo：
把dubbo-damin解压后的文件复制到tomcat的webapps下，如果报错
com.alibaba.citrus.service.uribroker.impl.URIBrokerServiceImpl$URIBrokerInfo
说明jdk版本是1.8不能运行这个，需要改成1.7的。改完后，重启。
如果报错 Starting ZkClient event thread说明 zookeeper没有启动，启动即可。
如果报错端口占用，查询端口的pid关闭即可，经常是java占用了。

=========================================================================InnoDB: Plugin initialization aborted with error Generic error

查看ip：ip add
centos账号密码：root/shuang

rpm -qa | grep mysql							查看CentOS自带的mysql

rpm -e --nodeps ???								mysql卸载

less /var/log/mysqld.log|grep error				#查看日志

rm -rf /var/log/mysqld.log						#删除日志

service mysqld restart							#重启


========================================================================
https://www.cnblogs.com/moxiaoan/p/5683743.html

centos7防火墙操作：
常用命令介绍
几条关于防火墙的命令：



2.关闭防火墙：systemctl stop firewalld.service 
3.开机不启动防火墙：systemctl disable firewalld.service

版权声明：本文为博主原创文章，转载请附上博文链接！
firewall-cmd --state                           ##查看防火墙状态，是否是running
									##开启状态：running 	关闭状态：not running 
systemctl start firewalld						开启防火墙
注意：防火墙关闭的情况下，netstat -lntp | grep 6379显示6379被占用，
打开了redis且配置没问题，但是远程始终连不上。无法tennet ip 6379，能tennet ip 22，
发现开启防火墙，并开放6379后解决。


永久关闭后，开启防火墙（开机自动启用）
systemctl enable firewalld
chkconfig iptables on



firewall-cmd --reload                          ##重新载入配置，比如添加规则之后，需要执行此命令
firewall-cmd --get-zones                       ##列出支持的zone
firewall-cmd --get-services                    ##列出支持的服务，在列表中的服务是放行的
firewall-cmd --query-service ftp               ##查看ftp服务是否支持，返回yes或者no
firewall-cmd --add-service=ftp                 ##临时开放ftp服务
firewall-cmd --add-service=ftp --permanent     ##永久开放ftp服务
firewall-cmd --remove-service=ftp --permanent  ##永久移除ftp服务

firewall-cmd --zone=public --add-port=80/tcp --permanent     ##永久添加80端口 
firewall-cmd --reload							#开放端口reload才生效
firewall-cmd --zone=public --list-ports		   #查看所有打开的端口


iptables -L -n                                 ##查看规则，这个命令是和iptables的相同的
man firewall-cmd                               ##查看帮助

mysql -uroot  -h192.168.88.130					#远程登陆mysql，-uroot表示用户名root

========================================================================


启动tomcat	
cd /usr/local/rjb/apache-tomcat-7.0.57/bin
./startup.sh
将war文件放在/usr/local/rjb/apache-tomcat-7.0.57/webapps即可，
war文件会不封装java文件保证源码安全
配置tomcat后，用workbench导出导入数据库即可，导入时需要先建数据库，选定后再导入
tail -f logs/catalina.out 查看tomcat日志(当前路径tomcat根目录)


将war放在tomcat的webapps下，tomcat会自动解压并运行，但是删除war包项目也会被删除。
可以先解压war包再放进去。

=========================================================================

修改redis.conf里damonize为yes					#设置后台启动

./bin/redis-server redis.conf					
#启动redis（redis账号密码都是root？？，先到redis目录，我装在rjb同级目录，redis.conf放在根目录）

./bin/redis-cli
127.0.0.1:6379> keys *							#打开客户端，并查看所有keys

netstat -lntp | grep 6379						#检测6379端口是否被占用
kill -9 进程id									#发现某进程占用端口后，关闭该进程

./bin/redis-cli -h 192.168.88.130 -p 6379	
							#打开redis后（./bin/redis-cli）才可以（远程）连接，需要防火墙开放6379
192.168.88.130:6379>							#输入ping返回pong表示连接正常

ps -ef | grep redis								#使用命令查看6379端口是否启动
./bin/redis-cli shutdown						#关闭redis（先到redis目录）


redis持久化
两种方法：rdb持久化和aof持久化
rdb生成rdb二进制文件，保存数据；
aof生产文本文件，保存操作过程。
AOF包含一个格式清晰、易于理解的日志文件用于记录所有的修改操作，可以通过该文件完成数据的重建。
例如使用flushall清空数据后，可以马上关闭redis服务器，把aof里的flushall删除，即可重建；

AOF的劣势有哪些呢？
1). 对于相同数量的数据集而言，AOF文件通常要大于RDB文件。RDB 在恢复大数据集时的速度比 AOF 的恢复速度要快。
2). 根据同步策略的不同，AOF在运行效率上往往会慢于RDB。总之，每秒同步策略的效率是比较高的，同步禁用策略的效率和RDB一样高效。

https://www.cnblogs.com/AndyAo/p/8135980.html

========================================================================

查看java版本：	java -version

=========================================================================

开启zookeeper：
cd /usr/local/rjb/registry-zookeeper/bin-->./zkServer.sh start。
查看zookeeper开启状态./zkServer.sh status。

========================================================================