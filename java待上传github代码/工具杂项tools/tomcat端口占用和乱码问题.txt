netstat -aon|findstr "8080"找到占用端口的pid（比如1552）；
如果任务管理器找不到pid，可以用taskkill /pid 1552 /f   关闭该程序。
https://blog.csdn.net/u010486124/article/details/38845163

===============================================================
get请求：

关于配置Tomcat的URIEncoding
遇到的问题：

     程序需要发送http GET请求到服务器，请求的参数中包含了中文字符。程序中参数为UTF-8格式，且经过了UTF-8 URL编码再发送。使用的tomcat服务器，但服务器端后台程序中取到的参数的中文是乱码。

 

问题原因：

经过分析，应该是Tomcat在解析参数的时候没有使用正确的编码格式（UTF-8）去解码。

查看$TOMCAT_HOME/webapps/tomcat-docs/config/http.html这个说明文档，有如下说明： 
URIEncoding：This specifies the character encoding used to decode the URI bytes, after %xx decoding the URL. If not specified, ISO-8859-1 will be used.

也就是说，如果没有设置URIEncoding， Tomcat默认是按ISO-8859-1进行URL解码，ISO-8859-1并未包括中文字符，这样的话中文字符肯定就不能被正确解析了。

 

解决办法：

修改Tomcat的Server.xml，在Connector标签中加上URLEncoding参数：

<Connector port="8080" maxThreads="150" minSpareThreads="25" 
maxSpareThreads="75" enableLookups="false" redirectPort="8443" 
acceptCount="100" debug="99" connectionTimeout="20000" 
disableUploadTimeout="true" URIEncoding="UTF-8"/>



post请求：在web.xml里加入下面的配置
  <!-- 解决post乱码问题开始 -->
  <filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 解决post乱码问题结束 -->