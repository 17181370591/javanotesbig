ng-model：双向绑定

select2-model：双向绑定整个对象，只用在select2，这时用model只能双向绑定id

ng-repeat：遍历List(这个笔记里list=[{a:1,b:2},{a:2,b:4},{a:3,b:6}])
	<tr ng-repeat='x in list'>
		<td>{{x.a}}</td><td>{{x.b}}</td>
	<tr>
	
ng-repeat遍历Map要这么写，注意遍历List和Map的方法不一样，不能通用：
<li ng-repeat="(key,value) in searchMap.spec"  ng-if="value!=null&&value!=''"
	ng-click="removeSearchItem(key)">{{key}}:{{value}}</li>
						
						
						
ng-if：满足条件才会显示标签和标签内的东西，下例a！=1时整个div会消失。
    <div class="row data-type" ng-if='a==1'>
		<table>.....</table>
	</div>

ng-true-value/ng-false-value：
	<input type=checkbox ng-model='a' ng-true-value=1 ng-false-value=0/>
用在单选复选框，和ng-model配合使用，上例表示选中则a=1未选中则a=0

ng-options：
	<select ng-options="x.a as x.b for x in list" ng-model='w'>
	上例表示生成一个下拉列表，每个option显示的值是遍历list的每个对象x的b属性，
	即[2,4,6]，而对应的w的值分别是[1,2,3]。类似于x.a是value，x.b是option的text。

ng-checked：
	   <input  ng-checked='a==1' type="checkbox" >
	   <input  ng-checked='willcheck()' type="checkbox" >
上面第一行代码表示a==1则选中，第二行表示'willcheck()返回true则选中false则不选中。			
	
	
{{$index==0?'active':''}}三目运算符：
class="{{$index==0?'active':''}} item"表示$index==0则class='active item'否则class='item'，
这是一个非常有意思且有用的写法。
在循环list的时候，循环体内部任何地方都可以用{{$index}}表示当前索引，
这里可以用硬编码{{adList[1].indexOf(x)==0}}代替，不过当然不应该用。


	<div class="yui3-u Center banerArea">
					<!--banner轮播-->
					<div id="myCarousel" data-ride="carousel" data-interval="4000" 
																class="sui-carousel slide">
						<ol class="carousel-indicators">
							<li ng-repeat='x in adList[1]' data-target="#myCarousel"
							data-slide-to="{{$index}}"
							//data-slide-to="{{adList[1].indexOf(x)}}"
							class="{{$index==0?'active':''}}"></li>
						</ol>
						<div class="carousel-inner">
						    <div   ng-repeat='y in adList[1]' 
						    		class="{{$index==0?'active':''}} item">
							    <a href="{{y.url}}">
							    	<img src="{{y.pic}}" />
							    </a>
						    </div>
						</div>
						<a href="#myCarousel" data-slide="prev" class="carousel-control left">‹</a><a href="#myCarousel" data-slide="next" class="carousel-control right">›</a>
					</div>
				</div>
				


				
ng-bind-html：
在为html标签绑定数据的时，如果绑定的内容是纯文本，你可以使用{{}}或者ng-bind。
但在为html标签绑定带html标签的内容的时候，angularjs为了安全考虑，不会将其渲染成html，
而是将其当做文本直接在页面上展示。有两种方法：
1、过滤器
html部分：
<body ng-app="myApp" ng-controller="myCtl">
<div ng-bind-html="htmlContent | to_trusted">
</div>
</body>

js部分：
<script>
    var app = angular.module('myApp', []);
    app.controller('myCtl',['$scope', function($scope){
        $scope.htmlContent = '<h1 style="color: orange">wednesday</h1>';
    }]);
    app.filter('to_trusted', ['$sce', function ($sce) {
　　  return function (text) {
    　　  return $sce.trustAsHtml(text);
　　};
}]);
</script>


2.$sce.trustAsHtml
html部分：
<body ng-app="myApp" ng-controller="myCtl">
    <div ng-bind-html="content">
    </div>
</body>
js部分：
<script>
    var app = angular.module('myApp', []);
    $scope.content="My name is: <h1>John Doe</h1>";
    app.controller('myCtl', function($scope,$sce){
        $scope.content = $sce.trustAsHtml( $scope.content );
    });
</script>
	

===========================================================================

angularjs页面间传递数据：
url地址需要加一个#，如goods_edit.html#?id={{x.id}}，
然后在goods_edit.html的controller.js里用
app.controller('goodsController' ,function($scope,$controller,$location){
	 $scope.uid=$location.search().id;
}即可将该id值({{x.id}})传递给uid。

===========================================================================

似乎app.controller的形参的顺序没有要求，上例改了形参顺序依旧能够运行。

===========================================================================



===========================================================================

updateGoodsStatus里$scope.reloadList()和location.href='goods.html'都可以回到列表页面，
但是location.href='goods.html'会刷新整个页面，页面被重新渲染，scope域会被重新生成；
而$scope.reloadList不会，因为它调用了findPage，重新去数据库拿更新后的数据，
只刷新数据不渲染页面。类似于ajax。原理是(pinyougou的$scope绑定的)这些方法在后台
都是@RestController，即不返回页面只返回数据。
还有$scope.selectIds=[]写在$scope.reloadList()前后都一样，因为$scope没有被重新生成。

    $scope.updateGoodsStatus=function(i){
    	goodsService.updateGoodsStatus($scope.selectIds,i).success(function(data){
    		if(data.success){
    			$scope.selectIds=[];
    			$scope.reloadList();
    	/*		$scope.selectIds=[];
				location.href='goods.html';  */
    		}else{
    			alert(data.success);
    		}
    	})
    }
	
	$scope.reloadList=function(){
			//切换页码
				$scope.findPage( $scope.paginationConf.currentPage,
				$scope.paginationConf.itemsPerPage);
			}
	
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================
===========================================================================

===========================================================================

===========================================================================

===========================================================================



